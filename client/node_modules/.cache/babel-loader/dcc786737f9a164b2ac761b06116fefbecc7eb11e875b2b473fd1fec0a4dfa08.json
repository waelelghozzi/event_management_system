{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waelg\\\\OneDrive\\\\Bureau\\\\test stage\\\\client\\\\src\\\\components\\\\AddEvents\\\\AddEvent.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { useState, useEffect } from \"react\";\nimport './AddEvents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nexport default function AddEvent(props) {\n  _s();\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [newAdress, setNewAdress] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const GetEvents = () => {\n    fetch(API_BASE + \"/events\").then(res => res.json()).then(data => setEvents(data)).catch(err => console.error(\"Error\", err));\n  };\n  const addEventN = async () => {\n    GetEvents();\n    const data = await fetch(API_BASE + \"/event/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        description: newDescription,\n        date: newDate,\n        address: newAdress,\n        image: newImage\n      })\n    }).then(res => res.json());\n    setEvents([...events, data]);\n    setNewTitle(\"\");\n    setNewDescription(\"\");\n    setNewAdress(\"\");\n    setNewDate(\"\");\n    setNewImage(\"\");\n    console.log(newImage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"EventsHeader\",\n      children: \"Add events :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"myFile\",\n          className: \"add-event-image-label\",\n          children: \"Add an image for your event !\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"myFile\",\n          name: \"filename\",\n          className: \"hidden\",\n          onChange: e => setNewImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-event-input\",\n          onChange: e => setNewTitle(e.target.value),\n          value: newTitle,\n          placeholder: \"Title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-event-input\",\n          onChange: e => setNewDescription(e.target.value),\n          value: newDescription,\n          placeholder: \"Description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-event-input\",\n          onChange: e => setNewAdress(e.target.value),\n          value: newAdress,\n          placeholder: \"Event adress\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"add-event-input\",\n          onChange: e => setNewDate(e.target.value),\n          value: newDate,\n          placeholder: \"Event date\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addEventN,\n          className: \"add-event-button\",\n          children: \"Add Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_s(AddEvent, \"O1c01BeCWqxqxyi+LNLwNjUoXhg=\");\n_c = AddEvent;\nvar _c;\n$RefreshReg$(_c, \"AddEvent\");","map":{"version":3,"names":["React","Component","useState","useEffect","API_BASE","AddEvent","props","newTitle","setNewTitle","newDescription","setNewDescription","newDate","setNewDate","newAdress","setNewAdress","newImage","setNewImage","events","setEvents","GetEvents","fetch","then","res","json","data","catch","err","console","error","addEventN","method","headers","body","JSON","stringify","title","description","date","address","image","log","e","target","files","value"],"sources":["C:/Users/waelg/OneDrive/Bureau/test stage/client/src/components/AddEvents/AddEvent.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport './AddEvents.css'\r\nconst API_BASE=\"http://localhost:3001\";\r\n\r\n\r\n\r\nexport default function AddEvent (props) {\r\n\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newDescription,setNewDescription] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n  const [newAdress, setNewAdress] = useState(\"\");\r\n  const [newImage, setNewImage] = useState(\"\");\r\n  \r\n  \r\n  \r\n  const[events, setEvents]=useState([]);\r\n  const GetEvents =()=>{\r\n    fetch(API_BASE+\"/events\").then(res=>res.json())\r\n                             .then(data=>setEvents(data))\r\n                             .catch(err=> console.error(\"Error\",err));}\r\n  \r\n\r\n\r\n\r\n  const addEventN= async() => {\r\n    \r\n    GetEvents()\r\n    \r\n  const data = await fetch(API_BASE+ \"/event/new\",{\r\n      method:\"POST\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        title:newTitle,\r\n        description:newDescription,\r\n        date:newDate,\r\n        address:newAdress,\r\n        image:newImage\r\n      })\r\n    }).then(res=> res.json());\r\n     setEvents([...events,data]);\r\n     setNewTitle(\"\");\r\n     setNewDescription(\"\");\r\n     setNewAdress(\"\")\r\n     setNewDate(\"\");\r\n     setNewImage(\"\")\r\n    console.log(newImage)\r\n  }\r\n\r\n    return (\r\n      <div className='EventsContainer'> \r\n      <h2 className='EventsHeader'>Add events :</h2>\r\n        <div className=\"content\">\r\n\r\n        <form>\r\n          <label for=\"myFile\" className='add-event-image-label'>Add an image for your event !</label>\r\n          <input type=\"file\" id=\"myFile\" name=\"filename\" className='hidden' onChange={(e)=> setNewImage(e.target.files[0])}/>  \r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewTitle(e.target.value)} value={newTitle} placeholder=\"Title\" required />\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewDescription(e.target.value)} value={newDescription} placeholder=\"Description\" required/>\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewAdress(e.target.value)} value={newAdress} placeholder=\"Event adress\" required/>\r\n          <input type=\"date\" className=\"add-event-input\" onChange={e=> setNewDate(e.target.value)} value={newDate} placeholder=\"Event date\" required/>\r\n          <button type=\"button\" onClick={addEventN} className=\"add-event-button\">Add Event</button>\r\n        </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}