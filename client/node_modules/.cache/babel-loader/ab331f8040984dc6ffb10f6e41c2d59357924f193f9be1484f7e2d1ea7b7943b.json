{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waelg\\\\OneDrive\\\\Bureau\\\\test stage\\\\client\\\\src\\\\components\\\\Events\\\\Events.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport SimpleEvent from './SimpleEvent.js';\nimport './Events.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nexport default function Events(props) {\n  _s();\n  const [updatePopupActive, setUpdatePopupActive] = useState(false);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  const [newAdress, setNewAdress] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [updatedId, setupdatedId] = useState(\"\");\n  const updateHandler = id => {\n    console.log(id);\n    setupdatedId(id);\n    setUpdatePopupActive(true);\n  };\n  const updateEvent = async i => {\n    console.log(updatedId);\n    const data = await fetch(API_BASE + \"/event/update/\" + updatedId, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: newDate,\n        title: newTitle,\n        address: newAdress,\n        description: newDescription\n      })\n    }).then(res => res.json());\n    setUpdatePopupActive(false);\n    setNewTitle(\"\");\n    setNewDescription(\"\");\n    setNewDate(\"\");\n    setNewAdress(\"\");\n    GetEvents();\n  };\n  const GetEvents = () => {\n    fetch(API_BASE + \"/events\").then(res => res.json()).then(data => setEvents(data)).catch(err => console.error(\"Error\", err));\n  };\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    GetEvents();\n  }, []);\n  const deleteEvent = async id => {\n    const data = await fetch(API_BASE + \"/event/delete/\" + id, {\n      method: \"DELETE\"\n    }).then(res => res.json());\n    setEvents(events => events.filter(event => event._id == data._id));\n    GetEvents();\n  };\n  let refs = [];\n  const change = index => {\n    if (refs.indexOf(index) >= 0) {\n      refs.pop(index);\n    } else {\n      refs.push(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventsContainer\",\n    children: [console.log(events), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"EventsHeader\",\n      children: \"Events :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: events.map(e => /*#__PURE__*/_jsxDEV(SimpleEvent, {\n        title: e.title,\n        description: e.description,\n        date: e.date,\n        address: e.address,\n        image: e.image,\n        id: e._id,\n        call: updateHandler,\n        oneDel: deleteEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), updatePopupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopup\",\n        onClick: () => setUpdatePopupActive(false),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"myFile\",\n            className: \"add-event-image-label\",\n            children: \"Add an image for your event !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"myFile\",\n            name: \"filename\",\n            className: \"hidden\",\n            onChange: e => setNewImage(e.target.files[0].name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"add-event-input\",\n            onChange: e => setNewTitle(e.target.value),\n            value: newTitle,\n            placeholder: \"Title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"add-event-input\",\n            onChange: e => setNewDescription(e.target.value),\n            value: newDescription,\n            placeholder: \"Description\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"add-event-input\",\n            onChange: e => setNewAdress(e.target.value),\n            value: newAdress,\n            placeholder: \"Event adress\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"add-event-input\",\n            onChange: e => setNewDate(e.target.value),\n            value: newDate,\n            placeholder: \"Event date\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: updateEvent,\n            className: \"add-event-button\",\n            children: \"Add Event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n_s(Events, \"hQYWrqy0vusyCJRV6sz+k5MAdYQ=\");\n_c = Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","Component","SimpleEvent","useState","useEffect","API_BASE","Events","props","updatePopupActive","setUpdatePopupActive","newTitle","setNewTitle","newDescription","setNewDescription","newDate","setNewDate","newAdress","setNewAdress","newImage","setNewImage","updatedId","setupdatedId","updateHandler","id","console","log","updateEvent","i","data","fetch","method","headers","body","JSON","stringify","date","title","address","description","then","res","json","GetEvents","setEvents","catch","err","error","events","deleteEvent","filter","event","_id","refs","change","index","indexOf","pop","push","map","e","image","target","files","name","value"],"sources":["C:/Users/waelg/OneDrive/Bureau/test stage/client/src/components/Events/Events.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport SimpleEvent from './SimpleEvent.js'\r\nimport './Events.css'\r\nimport { useState,useEffect } from \"react\";\r\nconst API_BASE=\"http://localhost:3001\";\r\n\r\n\r\n\r\nexport default function Events(props) {\r\n  \r\nconst[updatePopupActive, setUpdatePopupActive]=useState(false);\r\nconst [newTitle, setNewTitle] = useState(\"\");\r\nconst [newDescription,setNewDescription] = useState(\"\");\r\nconst [newDate, setNewDate] = useState(\"\");\r\nconst [newAdress, setNewAdress] = useState(\"\");\r\nconst [newImage, setNewImage] = useState(\"\");\r\nconst [updatedId, setupdatedId] = useState(\"\");\r\n\r\n\r\n\r\n\r\nconst updateHandler = id=>{\r\n  console.log(id)\r\n  setupdatedId(id)\r\n  setUpdatePopupActive(true)\r\n \r\n}\r\n\r\n\r\n\r\nconst updateEvent=async(i)=> {\r\n  \r\n  console.log(updatedId)\r\n  const data = await fetch(API_BASE+\"/event/update/\"+updatedId,{\r\n    method:\"PATCH\",\r\n    headers: {\r\n      \"Content-Type\":\"application/json\"\r\n    },\r\n    body: JSON.stringify({ \r\n      date:newDate,\r\n      title:newTitle,\r\n      address:newAdress,\r\n      description:newDescription\r\n      \r\n     \r\n    \r\n    })\r\n  }).then(res=> res.json());\r\n  \r\n   setUpdatePopupActive(false);\r\n   setNewTitle(\"\");\r\n   setNewDescription(\"\");\r\n   setNewDate(\"\");\r\n   setNewAdress(\"\");\r\n   GetEvents();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    const GetEvents =()=>{\r\n      fetch(API_BASE+\"/events\").then(res=>res.json())\r\n                               .then(data=>setEvents(data))\r\n                               .catch(err=> console.error(\"Error\",err));}\r\n    \r\n                               const[events, setEvents]=useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n      GetEvents();\r\n    },[])\r\n   \r\n    const deleteEvent = async id =>{\r\n        const data = await fetch(API_BASE+\"/event/delete/\"+id ,{method:\"DELETE\"})\r\n        .then(res=>res.json());\r\n        setEvents(events=>events.filter(event => event._id == data._id))\r\n        GetEvents();}\r\n\r\n    let refs=[]\r\n    const change=(index)=>{\r\n\r\n           if (refs.indexOf(index)>=0){\r\n               refs.pop(index);\r\n           }else{\r\n             refs.push(index);\r\n           }}\r\n    return (\r\n      \r\n      <div className='EventsContainer'> \r\n      {console.log(events)}\r\n        <h2 className='EventsHeader'>Events :</h2>\r\n        <div className='content'>\r\n\r\n  {events.map((e)=>(\r\n  <SimpleEvent title={e.title}\r\n   description={e.description} date={e.date}\r\n  address={e.address} image={e.image} id={e._id} call={updateHandler} oneDel={deleteEvent}/>\r\n))}\r\n      </div>\r\n\r\n\r\n\r\n{updatePopupActive ? ( \r\n  <div className=\"popup\">\r\n  \r\n  <div className=\"closePopup\" onClick={()=>setUpdatePopupActive(false)}>x</div>\r\n  \r\n    <div className=\"content\">\r\n    <form>\r\n    <label for=\"myFile\" className='add-event-image-label'>Add an image for your event !</label>\r\n          <input type=\"file\" id=\"myFile\" name=\"filename\" className='hidden' onChange={(e)=> setNewImage(e.target.files[0].name)}/>  \r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewTitle(e.target.value)} value={newTitle} placeholder=\"Title\" required />\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewDescription(e.target.value)} value={newDescription} placeholder=\"Description\" required/>\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewAdress(e.target.value)} value={newAdress} placeholder=\"Event adress\" required/>\r\n          <input type=\"date\" className=\"add-event-input\" onChange={e=> setNewDate(e.target.value)} value={newDate} placeholder=\"Event date\" required/>\r\n          <button type=\"button\" onClick={updateEvent} className=\"add-event-button\">Add Event</button>\r\n    </form>\r\n    </div>\r\n\r\n  </div>\r\n) : ''}  \r\n\r\n\r\n\r\n      </div>)}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}