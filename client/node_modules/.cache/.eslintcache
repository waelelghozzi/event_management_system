[{"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\index.js":"1","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\App.js":"2","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\reportWebVitals.js":"3","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Events\\Events.js":"4","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Side\\Side.js":"5","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\AddEvents\\AddEvent.js":"6","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Side\\Tabs.js":"7","C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Events\\SimpleEvent.js":"8"},{"size":539,"mtime":1673705488850,"results":"9","hashOfConfig":"10"},{"size":676,"mtime":1673887851650,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1673701408780,"results":"12","hashOfConfig":"10"},{"size":3776,"mtime":1673915489378,"results":"13","hashOfConfig":"10"},{"size":385,"mtime":1673790886716,"results":"14","hashOfConfig":"10"},{"size":2535,"mtime":1673914983449,"results":"15","hashOfConfig":"10"},{"size":397,"mtime":1673733848927,"results":"16","hashOfConfig":"10"},{"size":1346,"mtime":1673912928783,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"9gu0lf",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\index.js",[],[],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\App.js",["45"],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Events\\Events.js",["46","47","48","49"],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Side\\Side.js",["50"],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\AddEvents\\AddEvent.js",["51","52"],[],"import React, { Component } from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport './AddEvents.css'\r\nconst API_BASE=\"http://localhost:3001\";\r\n\r\n\r\n\r\nexport default function AddEvent (props) {\r\n\r\n  const [newTitle, setNewTitle] = useState(\"\");\r\n  const [newDescription,setNewDescription] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(\"\");\r\n  const [newAdress, setNewAdress] = useState(\"\");\r\n  const [newImage, setNewImage] = useState(\"\");\r\n  \r\n  \r\n  \r\n  const[events, setEvents]=useState([]);\r\n  const GetEvents =()=>{\r\n    fetch(API_BASE+\"/events\").then(res=>res.json())\r\n                             .then(data=>setEvents(data))\r\n                             .catch(err=> console.error(\"Error\",err));}\r\n  \r\n\r\n\r\n\r\n  const addEventN= async() => {\r\n    \r\n    GetEvents()\r\n    \r\n  const data = await fetch(API_BASE+ \"/event/new\",{\r\n      method:\"POST\",\r\n      headers: {\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        title:newTitle,\r\n        description:newDescription,\r\n        date:newDate,\r\n        address:newAdress,\r\n        image:newImage\r\n      })\r\n    }).then(res=> res.json());\r\n     setEvents([...events,data]);\r\n     setNewTitle(\"\");\r\n     setNewDescription(\"\");\r\n     setNewAdress(\"\")\r\n     setNewDate(\"\");\r\n     setNewImage(\"\")\r\n    console.log(newImage)\r\n  }\r\n\r\n    return (\r\n      <div className='EventsContainer'> \r\n      <h2 className='EventsHeader'>Add events :</h2>\r\n        <div className=\"contentadd\">\r\n\r\n        <form>\r\n          <label for=\"myFile\" className='add-event-image-label'>Add an image for your event !</label>\r\n          <input type=\"file\" id=\"myFile\" name=\"filename\" className='hidden' onChange={(e)=> setNewImage(e.target.files[0].name)}/>  \r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewTitle(e.target.value)} value={newTitle} placeholder=\"Title\" required />\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewDescription(e.target.value)} value={newDescription} placeholder=\"Description\" required/>\r\n          <input type=\"text\" className=\"add-event-input\" onChange={e=> setNewAdress(e.target.value)} value={newAdress} placeholder=\"Event adress\" required/>\r\n          <input type=\"date\" className=\"add-event-input\" onChange={e=> setNewDate(e.target.value)} value={newDate} placeholder=\"Event date\" required/>\r\n          <button type=\"button\" onClick={addEventN} className=\"add-event-button\">Add Event</button>\r\n        </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  \r\n}\r\n",[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Side\\Tabs.js",["53"],[],"C:\\Users\\waelg\\OneDrive\\Bureau\\test stage\\client\\src\\components\\Events\\SimpleEvent.js",["54","55"],[],{"ruleId":"56","severity":1,"message":"57","line":9,"column":3,"nodeType":"58","messageId":"59","endLine":12,"endColumn":6},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":34,"column":9,"nodeType":"62","messageId":"63","endLine":34,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":75,"column":60,"nodeType":"67","messageId":"68","endLine":75,"endColumn":62},{"ruleId":"60","severity":1,"message":"69","line":79,"column":11,"nodeType":"62","messageId":"63","endLine":79,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":6,"column":3,"nodeType":"58","messageId":"59","endLine":8,"endColumn":4},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"70","line":2,"column":19,"nodeType":"62","messageId":"63","endLine":2,"endColumn":28},{"ruleId":"60","severity":1,"message":"71","line":2,"column":15,"nodeType":"62","messageId":"63","endLine":2,"endColumn":21},{"ruleId":"60","severity":1,"message":"72","line":3,"column":7,"nodeType":"62","messageId":"63","endLine":3,"endColumn":15},{"ruleId":"73","severity":1,"message":"74","line":26,"column":12,"nodeType":"75","endLine":26,"endColumn":64},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'change' is assigned a value but never used.","'useEffect' is defined but never used.","'Outlet' is defined but never used.","'API_BASE' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]